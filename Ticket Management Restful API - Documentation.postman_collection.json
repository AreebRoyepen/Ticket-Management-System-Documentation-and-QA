{
	"info": {
		"_postman_id": "d781cc31-8834-4523-a459-56b81a29442c",
		"name": "Ticket Management Restful API - Documentation",
		"description": "This is the documentation for the **API** that handles the business logic for the **GIS Ticket Management System**.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2fdc6ac4-0b84-4f28-8c31-438004214eea",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\":\"areeb\",\n\t\"surname\":\"royepen\",\n\t\"email\":\"areeb.royepen@gmail.com\",\n\t\"number\":\"0724431348\",\n\t\"username\":\"admin\",\n\t\"password\":\"admin\",\n\t\"role\" : \"1\",\n\t\"active\":true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					]
				},
				"description": "registering admin type\n"
			},
			"response": []
		},
		{
			"name": "register coord",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1ca2bf7f-f74d-4238-9fe0-ff73681516df",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\":\"nabeel\",\n\t\"surname\":\"royepen\",\n\t\"email\":\"coord@gmail.com\",\n\t\"number\":\"0724431348\",\n\t\"username\":\"coord\",\n\t\"password\":\"coord\",\n\t\"role\" : \"2\",\n\t\"active\":false\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					]
				},
				"description": "Registering coordinator type\n"
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "614bc2c9-6500-4c90-b7ff-70aaab9cb1fe",
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"token\", data.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\":\"admin\",\n\t\"password\":\"admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c24e1cad-8f2d-4901-8c12-0766f1d249b3",
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"token\", data.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/refresh",
					"host": [
						"{{url}}"
					],
					"path": [
						"refresh"
					]
				}
			},
			"response": []
		},
		{
			"name": "changeUserStatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6bfd949f-d4f8-4fe3-b12b-fda1a7a4af68",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"user\" : 2,\n\t\"active\" : true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/changeUserStatus",
					"host": [
						"{{url}}"
					],
					"path": [
						"changeUserStatus"
					]
				},
				"description": "Admins can make coordinators inactive\n"
			},
			"response": []
		},
		{
			"name": "updateUser",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\":\"Areeb\",\n\t\"surname\":\"Royepen\",\n\t\"email\":\"areeb.royepen@gmail.com\",\n\t\"number\":\"0724431348\",\n\t\"username\":\"admin\",\n\t\"password\":\"admin\",\n\t\"role\" : \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/updateUser/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"updateUser",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b9067d55-1ce6-4c93-8306-1fd0efa7c4d2",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				},
				"description": "all users"
			},
			"response": []
		},
		{
			"name": "roles",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/roles",
					"host": [
						"{{url}}"
					],
					"path": [
						"roles"
					]
				},
				"description": "All Roles\n"
			},
			"response": []
		},
		{
			"name": "events",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fcb8b401-2848-4070-94f5-4533ca6f4f67",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/events",
					"host": [
						"{{url}}"
					],
					"path": [
						"events"
					]
				},
				"description": "get all events "
			},
			"response": []
		},
		{
			"name": "availableEvents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e9c07596-b053-48c6-a527-ffb0f82723bf",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/availableEvents",
					"host": [
						"{{url}}"
					],
					"path": [
						"availableEvents"
					]
				},
				"description": "gets all events not closed yet (whos books arent closed)"
			},
			"response": []
		},
		{
			"name": "unavailableEvents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "20d20702-4325-4489-bf2e-1d28bfed154c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/unavailableEvents",
					"host": [
						"{{url}}"
					],
					"path": [
						"unavailableEvents"
					]
				},
				"description": "get all events that are now closed and all funds have been collected"
			},
			"response": []
		},
		{
			"name": "addEvent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "926e8ff3-0a59-405e-b922-0fe499e9ef21",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\" : \"Matric Dance 2019\",\n\t\"from\": 1,\n\t\"to\" : 1000,\n\t\"active\": true,\n\t\"ticketPrice\" : 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/addEvent",
					"host": [
						"{{url}}"
					],
					"path": [
						"addEvent"
					]
				}
			},
			"response": []
		},
		{
			"name": "eventById",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de34c675-89a9-4e91-a42c-dfa966c53f20",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/eventById/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"eventById",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "eventByName",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a7f3b42e-097e-4dc0-8a2a-78a3cb60cb90",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Food Fair April 2018\"\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/eventByName",
					"host": [
						"{{url}}"
					],
					"path": [
						"eventByName"
					]
				}
			},
			"response": []
		},
		{
			"name": "eventLikeName",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d15ffe8-9b2f-40fd-9384-07e076bcee0f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Food Fair\"\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/eventLikeName",
					"host": [
						"{{url}}"
					],
					"path": [
						"eventLikeName"
					]
				},
				"description": "Get all events with names similar to the one provided\n"
			},
			"response": []
		},
		{
			"name": "updateEvent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5f9fa014-9f10-4a09-8732-e1f7268516e7",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"name\": \"Food Fair April 2018\",\r\n        \"ticketPrice\": 200,\r\n        \"from\": 1,\r\n        \"to\": 1000\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/updateEvent/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"updateEvent",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateEvent2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"active\" : \"true\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/updateEvent/27",
					"host": [
						"{{url}}"
					],
					"path": [
						"updateEvent",
						"27"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteEvent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9b518ca8-8542-4f37-9efc-856be0e835e2",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/deleteEvent/11",
					"host": [
						"{{url}}"
					],
					"path": [
						"deleteEvent",
						"11"
					]
				}
			},
			"response": []
		},
		{
			"name": "allocateTicket",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dae513fb-6201-4f8c-ae9d-8cae3da7cf65",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "18b28f35-4362-40c2-9d7f-077dd3db4ddf",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"ticketNumber\": 1,\n\t\"person\" :  \"1\",\n\t\"event\" : \"9\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/allocateTicket",
					"host": [
						"{{url}}"
					],
					"path": [
						"allocateTicket"
					]
				},
				"description": "Allocates a ticket to a person for a certain event"
			},
			"response": []
		},
		{
			"name": "bulkAllocateTicket",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bd15fdc4-35af-4925-9196-31e3c5ab791f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "bbb669e7-e6fc-4e6d-952a-446c20e2204c",
						"exec": [
							"if(pm.environment.get(\"allocatecount\") <=3){",
							"    postman.setNextRequest(\"bulkAllocateTicket\");   ",
							"    pm.environment.set(\"allocatecount\", parseInt(pm.environment.get(\"allocatecount\"),10)  + 1);",
							"}else if (pm.environment.get(\"allocatecount\") >3 && pm.environment.get(\"allocatecount\") <=5){",
							"    postman.setNextRequest(\"bulkAllocateTicket\");   ",
							"    pm.environment.set(\"allocatecount\", parseInt(pm.environment.get(\"allocatecount\"),10)  + 1);",
							"}else  if (pm.environment.get(\"allocatecount\") <=6 && pm.environment.get(\"allocatecount\") <=8){",
							"    postman.setNextRequest(\"bulkAllocateTicket\");   ",
							"    pm.environment.set(\"allocatecount\", parseInt(pm.environment.get(\"allocatecount\"),10)  + 1);",
							"}else{",
							"    pm.environment.set(\"allocatecount\",0);   ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"person\": 1,\n\t\"event\": {{allocatecount}},\n\t\"ticketNumberF\": 2,\n\t\"ticketNumberT\": 501\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/bulkAllocateTicket",
					"host": [
						"{{url}}"
					],
					"path": [
						"bulkAllocateTicket"
					]
				}
			},
			"response": []
		},
		{
			"name": "returnTicket",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "71c5c56e-edb8-48c1-a856-791639306998",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/returnTicket/1/501",
					"host": [
						"{{url}}"
					],
					"path": [
						"returnTicket",
						"1",
						"501"
					]
				},
				"description": "person returns ticket. Remove record from tables"
			},
			"response": []
		},
		{
			"name": "bulkReturn",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"event\": 4,\n\t\"ticketNumberF\": 2,\n\t\"ticketNumberT\": 501\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/bulkReturn",
					"host": [
						"{{url}}"
					],
					"path": [
						"bulkReturn"
					]
				},
				"description": "if ticket has been paid for, the amount is moved to surplus table"
			},
			"response": []
		},
		{
			"name": "tickets all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5dd8d7a8-d0d6-44bc-8bc6-8b95630f8b58",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/tickets",
					"host": [
						"{{url}}"
					],
					"path": [
						"tickets"
					]
				},
				"description": "returns list of ticket objects. Depending on parameters given the output will differ\n\n\tevent (id can be null)\n\tpaid (boolean can be null)"
			},
			"response": []
		},
		{
			"name": "tickets by event",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5dd8d7a8-d0d6-44bc-8bc6-8b95630f8b58",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"event\" : 1\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/tickets",
					"host": [
						"{{url}}"
					],
					"path": [
						"tickets"
					]
				},
				"description": "returns list of ticket objects. Depending on parameters given the output will differ\n\n\tevent (id can be null)\n\tpaid (boolean can be null)"
			},
			"response": []
		},
		{
			"name": "tickets by paid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5dd8d7a8-d0d6-44bc-8bc6-8b95630f8b58",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"paid\" : true\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/tickets",
					"host": [
						"{{url}}"
					],
					"path": [
						"tickets"
					]
				},
				"description": "returns list of ticket objects. Depending on parameters given the output will differ\n\n\tevent (id can be null)\n\tpaid (boolean can be null)"
			},
			"response": []
		},
		{
			"name": "tickets by event and paid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5dd8d7a8-d0d6-44bc-8bc6-8b95630f8b58",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"event\" : 1,\n\t\"paid\" : false\n\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/tickets",
					"host": [
						"{{url}}"
					],
					"path": [
						"tickets"
					]
				},
				"description": "returns list of ticket objects. Depending on parameters given the output will differ\n\n\tevent (id can be null)\n\tpaid (boolean can be null)"
			},
			"response": []
		},
		{
			"name": "unallocated",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/unallocated/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"unallocated",
						"1"
					]
				},
				"description": "unallocated tickets for specific event"
			},
			"response": []
		},
		{
			"name": "allUnallocated",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/unallocated",
					"host": [
						"{{url}}"
					],
					"path": [
						"unallocated"
					]
				}
			},
			"response": []
		},
		{
			"name": "payment",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b16fbc0d-68e5-41ef-be09-7d7d38525e6b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8c1f532a-1e03-4f46-95f0-e8ea3c2e54ff",
						"exec": [
							"if(pm.environment.get(\"paymentcount\") <=300){",
							"    postman.setNextRequest(\"payment\");   ",
							"    pm.environment.set(\"paymentcount\", parseInt(pm.environment.get(\"paymentcount\"),10)  + 1);",
							"}else{",
							" pm.environment.set(\"paymentcount\", 0);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"eventid\":2,\n\t\"ticketNumber\":{{paymentcount}},\n\t\"amount\" : 50\n\t\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/payment",
					"host": [
						"{{url}}"
					],
					"path": [
						"payment"
					]
				},
				"description": "Person pays for ticket\n\nexcess goes to surplus table"
			},
			"response": []
		},
		{
			"name": "bulkPayment",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee10ae77-e2d5-4c96-945c-e2827eb18e91",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"event\": 3,\n\t\"ticketNumberF\": 2,\n\t\"ticketNumberT\": 201,\n\t\"amount\": 40100\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/bulkPayment",
					"host": [
						"{{url}}"
					],
					"path": [
						"bulkPayment"
					]
				},
				"description": "\nexcess goes to surplus table"
			},
			"response": []
		},
		{
			"name": "payByPerson",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb1dee5e-8dc0-4e25-bfdd-2e5d66308e0c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"eventid\": 3,\n\t\"personid\" : 1,\n\t\"amount\" : 60100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/payByPerson",
					"host": [
						"{{url}}"
					],
					"path": [
						"payByPerson"
					]
				},
				"description": "pays for as much tickets as amount allows"
			},
			"response": []
		},
		{
			"name": "person",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b814bfbe-22d7-49da-9f16-73ebe60089b6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/person",
					"host": [
						"{{url}}"
					],
					"path": [
						"person"
					]
				},
				"description": "get all people registered within app"
			},
			"response": []
		},
		{
			"name": "addPerson",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e6f2be6e-2312-4eea-8084-0e03619969dc",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"name\" : \"Shabier\",\n\t\"surname\" : \"Cassiem\",\n\t\"number\" : \"0724431348\",\n\t\"email\" : \"sc@gmail.com\"\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/addPerson",
					"host": [
						"{{url}}"
					],
					"path": [
						"addPerson"
					]
				}
			},
			"response": []
		},
		{
			"name": "personByName",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "32b819d5-bdd8-452a-8fec-124806c2cba4",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/personByName/Areeb",
					"host": [
						"{{url}}"
					],
					"path": [
						"personByName",
						"Areeb"
					]
				}
			},
			"response": []
		},
		{
			"name": "personLikeName",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/personLikeName/ee",
					"host": [
						"{{url}}"
					],
					"path": [
						"personLikeName",
						"ee"
					]
				}
			},
			"response": []
		},
		{
			"name": "personByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e892968-cdaf-4b54-9d4f-9ba151780c83",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/personByID/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"personByID",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "deletePerson",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cafaaed1-2d1b-4dc0-98f3-7c251eea1b7e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/deletePerson/4",
					"host": [
						"{{url}}"
					],
					"path": [
						"deletePerson",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "updatePerson",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "39eb62d9-8392-48a9-8da3-675f0124c022",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Areeb\",\r\n    \"surname\": \"Royeppen\",\r\n    \"number\": \"0724431348\",\r\n    \"email\": \"a@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/updatePerson/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"updatePerson",
						"1"
					]
				},
				"description": "fields can be left out. API will then not change those fields in db"
			},
			"response": []
		},
		{
			"name": "surplus",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/surplus",
					"host": [
						"{{url}}"
					],
					"path": [
						"surplus"
					]
				},
				"description": "entire surplus table dump"
			},
			"response": []
		},
		{
			"name": "dashboard",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dashboard",
					"host": [
						"{{url}}"
					],
					"path": [
						"dashboard"
					]
				},
				"description": "returns values used for front end dashboard to minimize data consumption"
			},
			"response": []
		},
		{
			"name": "whoOwesWhat/all",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/whoOwesWhat/all/email/areeb.royepen@gmail.com",
					"host": [
						"{{url}}"
					],
					"path": [
						"whoOwesWhat",
						"all",
						"email",
						"areeb.royepen@gmail.com"
					]
				},
				"description": "takes \nparameter 1 : all or open or closed (event types)\n\nparameter 2: email or download \n\nparameter 3: email address or dummy string if using download option\n\n"
			},
			"response": []
		},
		{
			"name": "eventsOutstanding/all",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/eventsOutstanding/all/download/x",
					"host": [
						"{{url}}"
					],
					"path": [
						"eventsOutstanding",
						"all",
						"download",
						"x"
					]
				},
				"description": "takes \nparameter 1 : all or open or closed (event types)\n\nparameter 2: email or download \n\nparameter 3: email address or dummy string if using download option\n"
			},
			"response": []
		},
		{
			"name": "returnedTickets/all",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/returnedTickets/all/download/x",
					"host": [
						"{{url}}"
					],
					"path": [
						"returnedTickets",
						"all",
						"download",
						"x"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "takes \nparameter 1 : all or open or closed (event types)\n\nparameter 2: email or download \n\nparameter 3: email address or dummy string if using download option\n"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4a2502f8-f09d-46bc-815b-ce5a59a776ad",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "1f07d01f-4679-433a-80c4-cc7aa7e42a5b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}